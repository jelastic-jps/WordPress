jpsType: install
jpsVersion: '1.1'
id: wordpress
name: WordPress Standalone Kit
categories:
  - apps/blogs
  - apps/content-management
logo: https://raw.githubusercontent.com/hostpapa/jelastic-wordpress-jps/master/images/wp-standalone.png
homepage: http://wordpress.org/
description:
  text: WordPress Standalone with built-in kit for choosing optimal application servers and a set of advanced features for running websites and blogs. WordPress CMS deployed as a lightweight standalone container with minimal allocated resources for cost efficiency.
  short: WordPress Standalone with built-in kit for choosing optimal application servers and a set of advanced features for running websites and blogs
baseUrl: https://raw.githubusercontent.com/hostpapa/jelastic-wordpress-jps/DEVOPS-52/wordpress

onBeforeInit: ${baseUrl}/scripts/settings.js?_r=${fn.random}
onBeforeInstall: ${baseUrl}/beforeinstall.js?_r=${fn.random}

skipNodeEmails: false

nodes: definedInOnBeforeInstall

settings:
  fields:
  
    - caption: Advanced Features
      type: displayfield
      name: displayfield
      markup:
             
    - caption: Install Let's Encrypt SSL with Auto-Renewal
      type: checkbox
      name: le-addon
      value: true
      disabled: false
      tooltip: "Advanced integration with Let's Encrypt certificate authority that simplifies and automates the process of issuing, configuring and updating trusted custom SSL certificates."

    - type: displayfield
      hideLabel: true
      hidden: true
      name: bl_count   
      markup:

mixins:
 - https://raw.githubusercontent.com/jelastic-jps/wordpress/master/configs/vers.yaml

globals:
  PATH: ${baseUrl}
  DB_USER: jelastic-${fn.random}
  DB_PASS: ${fn.password(10)}
  DB_HOST: 127.0.0.1
  PROTOCOL: http
  WP_ADMIN_PASS: ${fn.password(10)}
  SUCCESS: success
  EMAIL: default
  STACK: nginx

onAfterInstallAddon [nodeGroup:cp, id:cdn]:
  - install: ${baseUrl}/scripts/setupCDN.jps
    settings:
      PATH: ${baseUrl}
      
onAfterBindSSL: setupDomain

onAfterClone: 
  - script: |
        var resp = {result:0}
        if (${event.response.env.sslstate}) {
          resp.onAfterReturn = {setGlobals: {PROTOCOL: "https"}}
        }
        return resp;

  - install: ${globals.PATH}/scripts/setupDomain.jps?_r=${fn.random}
    envName: ${event.response.env.envName}
    settings:
      domain: ${globals.PROTOCOL}://${event.response.env.domain}
    
onBeforeMigrate:
  - cmd[${nodes.cp.master.id}]: wp option get siteurl --path=${SERVER_WEBROOT} | cut -d'/' -f3;
  - if (/${response.out}/.test(env.domain)):
      cmd[${nodes.cp.master.id}]: echo true > ~/migrate
  - else:
      cmd[${nodes.cp.master.id}]: echo false > ~/migrate

onAfterMigrate:
  - cmd[${nodes.cp.master.id}]: if test -f ~/migrate; then cat ~/migrate; fi
  - if (/${response.out}/.test(true)):
    - script: |
        var resp = {result:0}
        if (${env.sslstate}) {
          resp.onAfterReturn = {setGlobals: {PROTOCOL: "https"}}
        }
        return resp;
 
    - install: ${globals.PATH}/scripts/setupDomain.jps?_r=${fn.random}
      settings:
        domain: ${globals.PROTOCOL}://${env.domain}
         
  - cmd[cp]: sudo jem service restart

onInstall:

  - script: |
        return {
          result:0,
          ssl: jelastic.billing.account.GetQuotas('environment.jelasticssl.enabled').array[0].value
        }
  - if (${response.ssl}):
      setGlobals:
        PROTOCOL: https
        
  - setGlobals:
      DOMAIN: ${response.domain}         
    
  - creatUserDB

  - setupNode:
      nodeId: cp

  - if (${settings.le-addon:false}):
      - setGlobals:
          PROTOCOL: https

  - install-wordpress
  
actions:

  setupDomain:
    - cmd[cp]: source /opt/letsencrypt/settings && echo $domain
    - set:
        domain: ${response.out}
    - cmd[${nodes.cp.master.id}]: bash ~/bin/setupWP.sh --DOMAIN https://${this.domain}

  install-wordpress:
    - install: ${baseUrl}/scripts/installWP.jps
      settings:
        db_host: ${globals.DB_HOST}
        db_user: ${globals.DB_USER}
        db_pass: ${globals.DB_PASS}
        wp_admin_pass: ${globals.WP_ADMIN_PASS}
        wp_title: "Hello World"
        wp_url: ${globals.PROTOCOL}://${globals.DOMAIN}/
        targetNodeID: ${nodes.cp.master.id}
        github_token: ${globals.GITHUB_TOKEN}
        github_owner: ${globals.GITHUB_OWNER}
        github_repo: ${globals.GITHUB_REPO}
        github_repo_release: ${globals.GITHUB_REPO_RELEASE}

  setupNode:
    - log: OPTIMIZATION
    - install: https://raw.githubusercontent.com/jelastic/templates/master/config_v2.jps?_r=${fn.random}
      settings:
        targetGroup: cp
        targetNodes: ${this.nodeId}
        optimization: wordpress

    - log: Wordpress CLI Installation
    - install: ${baseUrl}/scripts/WP-CLI.jps?_r=${fn.random}
      settings:
        TARGET_NODES: ${this.nodeId}
        
  creatUserDB:
    - log: Create user for DataBase
    - cmd [cp]: |-
        wget ${baseUrl}/configs/sqldb/wordpress.cnf -O /etc/mysql/conf.d/wordpress.cnf &>> /var/log/run.log
        wget https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log
        bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log
        jem passwd set -p ${globals.DB_PASS} &>> /var/log/run.log 
      user: root
        
success:
  email: success/email/success-${globals.STACK}-${globals.EMAIL}.md?_r=${fn.random}
  text: success/text/${globals.SUCCESS}.md?_r=${fn.random}

startPage: ${globals.PROTOCOL}://${env.domain}/
